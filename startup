#!/usr/bin/env bash

function cleanup {
	echo Received request to shutdown
	fusermount -uz /mnt/${MERGEMOUNT} /mnt/${RCLONEMOUNT} > /dev/null 2>&1
	umount -f /mnt/${MERGEMOUNT} > /dev/null 2>&1
	umount -f /mnt/${RCLONEMOUNT} > /dev/null 2>&1
	umount -f /mnt/${NFSLOCAL} > /dev/null 2>&1
	rmdir /mnt/${MERGEMOUNT} > /dev/null 2>&1
	rmdir /mnt/${RCLONEMOUNT} > /dev/null 2>&1
	rmdir /mnt/${UNSYNCED} > /dev/null 2>&1
	rmdir /mnt/${UPLOADCACHE} > /dev/null 2>&1
	rmdir /mnt/${NFSLOCAL} > /dev/null 2>&1
	exit
}

rclone selfupdate > /dev/null 2>&1	# Grab a newer Rclone if container hasn't been updated
rclone --version
echo
mergerfs -v
echo
echo Starting vnstat
vnstatd -d
echo
echo "OmniMount version:  " $(cat version)

# Make sure we're only using the basename of the path for direcory creation

MERGEMOUNT=$(basename ${MERGEMOUNT})
RCLONEMOUNT=$(basename ${RCLONEMOUNT})
UNSYNCED=$(basename ${UNSYNCED})
UPLOADCACHE=$(basename ${UPLOADCACHE})
MEDIA=$(basename ${MEDIA})
if [[ ! ${USENFS} = true ]]
then
	# Not using NFS
	LOCAL=${RCLONEMOUNT}
else
	LOCAL=${NFSLOCAL}
fi
echo
echo Configuration:
echo MERGEMOUNT=${MERGEMOUNT}
echo RCLONESERVICE=${RCLONESERVICE}
echo RCLONEMOUNT=${RCLONEMOUNT}
echo UNSYNCED=${UNSYNCED}
echo UPLOADCACHE=${UPLOADCACHE}
echo USENFS=${USENFS}
echo NFSREMOTE=${NFSREMOTE}
echo NFSLOCAL=${NFSLOCAL}
echo MEDIA=${MEDIA}
echo TURBOMAX=${TURBOMAX}
echo LOCAL=${LOCAL}
if [[ -z ${MERGEMOUNT} || -z ${RCLONESERVICE} || -z ${RCLONEMOUNT} || -z ${UNSYNCED} || -z ${UPLOADCACHE} ]]; then
	echo One or more critical environment variables left undefined.
	exit 1
fi

# Create user to match prescribed userID

addgroup --gid ${GROUPID} omniuser
adduser --uid ${USERID} --gid ${GROUPID} --gecos "" --disabled-password omniuser

# Clean any leftovers

echo Cleaning up leftovers
fusermount -uz /mnt/${MERGEMOUNT} /mnt/${RCLONEMOUNT} > /dev/null 2>&1
umount -f /mnt/${MERGEMOUNT} > /dev/null 2>&1
umount -f /mnt/${RCLONEMOUNT} > /dev/null 2>&1
rm -r /mnt/${MERGEMOUNT} > /dev/null 2>&1
rm -r /mnt/${RCLONEMOUNT} > /dev/null 2>&1
if [[ ${USENFS} = true ]]
then
	umount -f /mnt/${NFSLOCAL} > /dev/null 2>&1
	rm -r /mnt/${NFSLOCAL} > /dev/null 2>&1
fi
mkdir -p /mnt/${MERGEMOUNT} /mnt/${LOCAL} /mnt/${UNSYNCED} /mnt/${UPLOADCACHE}/Downloads /logs
chown -R ${USERID}:${GROUPID} /mnt /config
echo Starting services
/root/omni-mounter
if [[ ${?} -ne 0 ]]
then
	echo Mounter failed
	exit 1
fi
/root/omni-merger
echo
echo Startup complpete

trap cleanup SIGKILL SIGTERM SIGHUP SIGINT SIGQUIT SIGABRT SIGUSR1 SIGUSR2 EXIT

while true; do
	sleep 1
done
exit
while $(mountpoint -q /mnt/${LOCAL}) && $(mountpoint -q /mnt/${MERGEMOUNT}); do
	# keep alive while Rclone and MergerFS mounts are present
	sleep 1
done

echo One or more mounts missing
fusermount -uz /mnt/${MERGEMOUNT} /mnt/${RCLONEMOUNT} > /dev/null 2>&1
umount -f /mnt/${MERGEMOUNT} > /dev/null 2>&1
umount -f /mnt/${RCLONEMOUNT} > /dev/null 2>&1
rm -r /mnt/${MERGEMOUNT} > /dev/null 2>&1
rm -r /mnt/${RCLONEMOUNT} > /dev/null 2>&1
if [[ ${USENFS} = true ]]
then
	umount -f /mnt/${NFSLOCAL} > /dev/null 2>&1
	rm -r /mnt/${NFSLOCAL} > /dev/null 2>&1
fi
echo Terminated
